<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.siemens.dasheng.web.mapper.DaConfigGroupMapper">
    <resultMap id="BaseResultMap" type="com.siemens.dasheng.web.model.DaConfigGroup">
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="account" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="app_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, description, 0 as account, app_id
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
          id, name, description, 0 as account, app_id
        from da_config_group
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectAppIdBySieCode" resultType="java.lang.Long" parameterType="java.lang.String">
        select app_id from da_config_sensor where siecode = #{sieCode}
    </select>

    <select id="selectGroupIdListBySieCode" resultType="java.lang.Long" parameterType="java.lang.String">
        select group_id from da_config_sensor_group where sensor_code = #{sieCode}
    </select>

    <select id="selectGroupListByAppId" resultType="com.siemens.dasheng.web.model.DaConfigGroupPlus" parameterType="Map">
        select t1.id, t1.name, t1.description, t2.account, t1.app_id as appId,(select count(*) from da_app_resource where objectid = cast(t1.id as VARCHAR(100)) and objecttype = 'SENSORGROUP') as usedNum from da_config_group t1
        left join
        (select count(1) as account, group_id from da_config_sensor_group group by group_id) t2
        on t1.id = t2.group_id
        where t1.app_id in
        (select extension_app_id from da_config_app_extension where app_id = #{appId} union all select #{appId} from dual)
        order by t1.name
    </select>

    <select id="selectSensorListByAppId" resultType="string" parameterType="Map">
        select siecode from da_config_sensor where app_id in
        (select extension_app_id from da_config_app_extension where app_id = #{appId} union all select #{appId} from dual)
    </select>

    <select id="selectSensorListWithGroup" resultType="String" parameterType="Map">
        select sensor_code from da_config_sensor_group where group_id = #{groupId}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from da_config_group where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteSensorWithGroup" parameterType="map">
        delete from da_config_sensor_group where group_id = #{groupId}
    </delete>

    <insert id="insert" parameterType="com.siemens.dasheng.web.model.DaConfigGroup">
        insert into da_config_group (id, name, description, app_id
        )
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{appId,jdbcType=BIGINT}
        )
    </insert>
    <!--pgsql 插入-->
   <insert id="insertSelectivePg" parameterType="com.siemens.dasheng.web.model.DaConfigGroup" keyProperty="id"  useGeneratedKeys="true">
        insert into da_config_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="appId != null">
                app_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="appId != null">
                #{appId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <!--orc 插入-->
    <insert id="insertSelectiveOrac" parameterType="com.siemens.dasheng.web.model.DaConfigGroup" keyProperty="id"  databaseId="oracle">
        insert into da_config_group
        <selectKey resultType="Long" order="BEFORE" keyProperty="id">
            SELECT da_config_group$seq.NEXTVAL as id from DUAL
        </selectKey>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="appId != null">
                app_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="appId != null">
                #{appId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <!-- 批量插入pgsql -->
   <insert id="insertSensorListPg" parameterType="java.util.List">
        insert into da_config_sensor_group
        (sensor_code, group_id)
        values
        <foreach collection="list" item="sensorWithGroup" index="index" separator=",">
            (
            #{sensorWithGroup.sensorCode}, #{sensorWithGroup.groupId}
            )
        </foreach>
    </insert>

    <!--批量插入orc-->
    <insert id="insertSensorListOrac" parameterType="java.util.List">
        insert into da_config_sensor_group
        (id,sensor_code, group_id)
        select da_config_sensor_group$seq.nextval,a.* from (
        <foreach collection="list" item="sensorWithGroup" index="" separator="union all">
            select
            #{sensorWithGroup.sensorCode},
            #{sensorWithGroup.groupId}
            from dual
        </foreach>) a
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.siemens.dasheng.web.model.DaConfigGroup">
        update da_config_group
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.siemens.dasheng.web.model.DaConfigGroup">
        update da_config_group
        set name = #{name},
        description = #{description}
        where id = #{id}
    </update>

    <select id="getByFilter" resultType="com.siemens.dasheng.web.model.DaConfigGroup">
        select t1.id, t1.name, t1.description, t2.account from da_config_group t1
        left join
        (select count(1) as account, group_id from da_config_sensor_group group by group_id) t2
        on t1.id = t2.group_id
        where 1 = 1
        <if test="appId != null">
            and t1.app_id = #{appId}
        </if>
        <if test="searchStr != '' and searchStr != null">
            and ( (lower (t1.name) like '%'|| ('${searchStr}') || '%' ) or ( lower (t1.description) like '%'||
            ('${searchStr}') || '%' ))
        </if>
    </select>
</mapper>