<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.siemens.dasheng.web.mapper.SensorMapper" >
  <resultMap id="BaseResultMap" type="com.siemens.dasheng.web.model.Sensor" >
    <constructor >
      <idArg column="id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="equipmentid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="figurenumber" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sensorkks" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="location" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="mediumtype" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="iotype" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="signaltype" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="connectedsystem" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="powersupplier" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="isolation" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="rangeunit" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="rangeup" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="rangedown" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="tendency" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="io1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="io2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="connectiontype" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="signaleffectiveway" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="reserve01" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="reserve02" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="reserve03" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, equipmentid, figurenumber, sensorkks, description, title, location, type, mediumtype, iotype,
    signaltype, connectedsystem, powersupplier, isolation, rangeunit, rangeup, rangedown, 
    tendency, io1, io2, connectiontype, signaleffectiveway, reserve01, reserve02, reserve03
  </sql>



  <select id="iTotalRecords" resultType="java.lang.Integer">
    select count(id) from sensor
  </select>

  <select id="iTotalDisplayRecords" resultType="java.lang.Integer">
    select count(sensor.id) from sensor sensor where sensor.id IS NOT NULL
    <if test="sSearch != '' and searchableArray != '' " >
      <bind name="s_Search" value="sSearch"/>
      and
      CONCAT(${searchableArray}) like '%' || '${s_Search}' || '%'
    </if>
  </select>


  <!--批量插入来自pi数据库或excel的数据-->
  <insert id="insertBatch">
    insert into sensor (id,sensorkks,description,rangeunit,equipmentid,title)
    <foreach collection="sensorImportShowInfos" item="sensorImportShowInfo" index="index" separator="UNION ALL">
      select
      #{sensorImportShowInfo.siecode},#{sensorImportShowInfo.kkscode},#{sensorImportShowInfo.title},#{sensorImportShowInfo.rangeunit},#{sensorImportShowInfo.instrumenttag},#{sensorImportShowInfo.title}
      from dual
    </foreach>
  </insert>

  <!--批量删除-->
  <delete id="deleteBatch">
    delete from sensor where id in (
    <foreach collection="siecodes" item="siecode" separator=",">
      #{siecode}
    </foreach>
    )
  </delete>

  <select id="selectSensorListByTagList" resultType="com.siemens.dasheng.web.model.Sensor">
    select id,sensorkks from sensor
    where sensorkks in
    (<foreach collection="tagList" item="tag" index="index" separator=",">
    #{tag}
  </foreach>)
  </select>
</mapper>